#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Written/Edited by Philipp NÃ¤ther
# philipp.naether@stadt-meissen.de

# 1:    ID             = dpe_fan_b2
      # DPE            = dpe
      # Enclosure      = dpe
      # Slot           = 2
      # Name           = DPE Cooling Module B2
      # Health state   = OK (5)
      # Health details = "The component is operating normally. No action is required."
      # Manufacturer   =
      # Model          =
      # Part number    = 100-542-054-05
      # Serial number  =

# 2:    ID             = dpe_fan_b0
      # DPE            = dpe
      # Enclosure      = dpe
      # Slot           = 0
      # Name           = DPE Cooling Module B0
      # Health state   = OK (5)
      # Health details = "The component is operating normally. No action is required."
      # Manufacturer   =
      # Model          =
      # Part number    = 100-542-054-05
      # Serial number  =

def inventory_emcunity_fan(info):
# parse info, no key needed for inventory
# "Name" is automatically added
    keys = None
    fans = emcunity_parse_info(info, keys)
    for fan in fans:
        tokens = re.split(" ", fans[fan]["Name"])
        item = "FAN " + tokens[3]
        yield item, None

def check_emcunity_fan(item, params, info):
# parse info, just get data we want for this check by defining the keys
    keys = [ "Name", "Health state", "Health details" ]
    fans = emcunity_parse_info(info, keys)
    for fan in fans:
        tokens = re.split(" ", fans[fan]["Name"])
        name = "FAN " + tokens[3]
        if name == item:
            hstate = fans[fan]["Health state"]
            hdetail = fans[fan]["Health details"]
    return parse_emcstate(hstate), "%s, %s" % (hstate, hdetail)

check_info["emcunity_fan"] = {
    'check_function'         :    check_emcunity_fan,
    'inventory_function'     :    inventory_emcunity_fan,
    'service_description'    :    'HW %s',
    'includes'               :    [ 'emcunity.include' ],
}
